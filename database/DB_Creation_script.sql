-- MySQL Script generated by MySQL Workbench
-- Thu Nov 21 20:14:37 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BookstoreDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `BookstoreDB` ;

-- -----------------------------------------------------
-- Schema BookstoreDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BookstoreDB` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `BookstoreDB` ;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`Shopping_Baskets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`Shopping_Baskets` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`Shopping_Baskets` (
  `basketId` INT NOT NULL,
  `order_date` VARCHAR(45) NULL,
  PRIMARY KEY (`basketId`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`author` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`author` (
  `name` VARCHAR(45) NOT NULL,
  `adress` VARCHAR(45) NULL,
  `url` VARCHAR(45) NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`award`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`award` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`award` (
  `name` VARCHAR(45) NOT NULL,
  `year` DATE NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`awarded_to`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`awarded_to` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`awarded_to` (
  `award_name` VARCHAR(45) NOT NULL,
  `book_isbn` INT NOT NULL,
  PRIMARY KEY (`award_name`, `book_isbn`),
  CONSTRAINT `fk_award_has_book_award1`
    FOREIGN KEY (`award_name`)
    REFERENCES `BookstoreDB`.`award` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_award_has_book_book1`
    FOREIGN KEY (`book_isbn`)
    REFERENCES `BookstoreDB`.`book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_award_has_book_book1_idx` ON `BookstoreDB`.`awarded_to` (`book_isbn` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_award_has_book_award1_idx` ON `BookstoreDB`.`awarded_to` (`award_name` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`book` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`book` (
  `isbn` INT NOT NULL,
  `category` VARCHAR(45) NULL,
  `price` VARCHAR(45) NULL,
  `title` VARCHAR(45) NULL,
  `year` INT NULL,
  PRIMARY KEY (`isbn`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`contains`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`contains` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`contains` (
  `book_isbn` INT NOT NULL,
  `shopping_basket_basket_id` INT NOT NULL,
  `number` INT NULL,
  PRIMARY KEY (`book_isbn`, `shopping_basket_basket_id`),
  CONSTRAINT `fk_book_has_shopping_basket_book1`
    FOREIGN KEY (`book_isbn`)
    REFERENCES `BookstoreDB`.`book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_book_has_shopping_basket_shopping_basket1`
    FOREIGN KEY (`shopping_basket_basket_id`)
    REFERENCES `BookstoreDB`.`shopping_basket` (`basket_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_book_has_shopping_basket_shopping_basket1_idx` ON `BookstoreDB`.`contains` (`shopping_basket_basket_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_book_has_shopping_basket_book1_idx` ON `BookstoreDB`.`contains` (`book_isbn` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`customer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`customer` (
  `email` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  PRIMARY KEY (`email`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`inventory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`inventory` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`inventory` (
  `warehouse_code` VARCHAR(45) NOT NULL,
  `book_isbn` INT NOT NULL,
  `number` INT NULL,
  PRIMARY KEY (`warehouse_code`, `book_isbn`),
  CONSTRAINT `fk_warehouse_has_book_warehouse1`
    FOREIGN KEY (`warehouse_code`)
    REFERENCES `BookstoreDB`.`warehouse` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_warehouse_has_book_book1`
    FOREIGN KEY (`book_isbn`)
    REFERENCES `BookstoreDB`.`book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_warehouse_has_book_book1_idx` ON `BookstoreDB`.`inventory` (`book_isbn` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_warehouse_has_book_warehouse1_idx` ON `BookstoreDB`.`inventory` (`warehouse_code` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`received_by`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`received_by` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`received_by` (
  `award_name` VARCHAR(45) NOT NULL,
  `author_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`award_name`, `author_name`),
  CONSTRAINT `fk_award_has_author_award`
    FOREIGN KEY (`award_name`)
    REFERENCES `BookstoreDB`.`award` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_award_has_author_author1`
    FOREIGN KEY (`author_name`)
    REFERENCES `BookstoreDB`.`author` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_award_has_author_author1_idx` ON `BookstoreDB`.`received_by` (`author_name` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_award_has_author_award_idx` ON `BookstoreDB`.`received_by` (`award_name` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`reservation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`reservation` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`reservation` (
  `id` INT NOT NULL,
  `reservation_date` DATE NULL,
  `pickup_time` DATE NULL,
  `customer_email` VARCHAR(45) NOT NULL,
  `book_isbn` INT NOT NULL,
  PRIMARY KEY (`id`, `customer_email`, `book_isbn`),
  CONSTRAINT `fk_reservation_customer1`
    FOREIGN KEY (`customer_email`)
    REFERENCES `BookstoreDB`.`customer` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reservation_book1`
    FOREIGN KEY (`book_isbn`)
    REFERENCES `BookstoreDB`.`book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_reservation_customer1_idx` ON `BookstoreDB`.`reservation` (`customer_email` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_reservation_book1_idx` ON `BookstoreDB`.`reservation` (`book_isbn` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`shopping_basket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`shopping_basket` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`shopping_basket` (
  `basket_id` INT NOT NULL,
  `order_date` DATE NULL,
  `customer_email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`basket_id`, `customer_email`),
  CONSTRAINT `fk_shopping_basket_customer1`
    FOREIGN KEY (`customer_email`)
    REFERENCES `BookstoreDB`.`customer` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_shopping_basket_customer1_idx` ON `BookstoreDB`.`shopping_basket` (`customer_email` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`warehouse`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`warehouse` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`warehouse` (
  `code` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BookstoreDB`.`written_by`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BookstoreDB`.`written_by` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `BookstoreDB`.`written_by` (
  `author_name` VARCHAR(45) BINARY NOT NULL,
  `book_isbn` INT NOT NULL,
  PRIMARY KEY (`author_name`, `book_isbn`),
  CONSTRAINT `fk_author_has_book_author1`
    FOREIGN KEY (`author_name`)
    REFERENCES `BookstoreDB`.`author` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_author_has_book_book1`
    FOREIGN KEY (`book_isbn`)
    REFERENCES `BookstoreDB`.`book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_author_has_book_book1_idx` ON `BookstoreDB`.`written_by` (`book_isbn` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_author_has_book_author1_idx` ON `BookstoreDB`.`written_by` (`author_name` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
